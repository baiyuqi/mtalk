<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" id="WebApp_ID" version="2.5">
  <display-name>AssistanceWeb</display-name>
  <filter>
    <filter-name>struts2</filter-name>
    <filter-class>org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>struts2</filter-name>
    <url-pattern>/application/*</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>struts2</filter-name>
    <url-pattern>/struts/*</url-pattern>
  </filter-mapping> 
  
  <welcome-file-list>
    <welcome-file>index.html</welcome-file>
  </welcome-file-list>
    <listener>
    <listener-class>org.directwebremoting.servlet.EfficientShutdownServletContextAttributeListener</listener-class>
  </listener>
  <listener>
    <listener-class>org.directwebremoting.servlet.EfficientShutdownServletContextListener</listener-class>
  </listener>
  
  <servlet> 
    <servlet-name>dwr-invoker</servlet-name> 
    <servlet-class>org.directwebremoting.servlet.DwrServlet</servlet-class> 
    <init-param> 
      <param-name>debug</param-name> 
      <param-value>true</param-value> 
    </init-param> 
    <init-param> 
      <param-name>pollAndCometEnabled</param-name> 
      <param-value>true</param-value> 
    </init-param> 
    <init-param> 
      <param-name>crossDomainSessionSecurity</param-name> 
      <param-value>false</param-value> 
    </init-param> 
        <!-- By default DWR creates application scope objects when they are first
    used. This creates them when the app-server is started -->
    <init-param>
      <param-name>initApplicationScopeCreatorsAtStartup</param-name>
      <param-value>true</param-value>
    </init-param>

    <!-- This enables full streaming mode. It's probably better to leave this
    out if you are running across the internet -->
    <init-param>
      <param-name>maxWaitAfterWrite</param-name>
      <param-value>-1</param-value>
    </init-param>
    
    <load-on-startup>1</load-on-startup> 
  </servlet> 
  <servlet-mapping>
    <servlet-name>dwr-invoker</servlet-name>
    <url-pattern>/dwr/*</url-pattern>
  </servlet-mapping>
  <servlet>
    <description></description>
    <display-name>Message</display-name>
    <servlet-name>Message</servlet-name>
    <servlet-class>com.tc.servlet.Message</servlet-class>
    <load-on-startup>4</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>Message</servlet-name>
    <url-pattern>/Message</url-pattern>
  </servlet-mapping>
  <servlet>
    <description></description>
    <display-name>DeviceService</display-name>
    <servlet-name>DeviceService</servlet-name>
    <servlet-class>com.tc.servlet.DeviceService</servlet-class>
    <load-on-startup>3</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>DeviceService</servlet-name>
    <url-pattern>/DeviceService</url-pattern>
  </servlet-mapping>
  <servlet>
    <description></description>
    <display-name>EnvironmentLoader</display-name>
    <servlet-name>EnvironmentLoader</servlet-name>
    <servlet-class>com.tc.env.EnvironmentLoader</servlet-class>
    <load-on-startup>2</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>EnvironmentLoader</servlet-name>
    <url-pattern>/EnvironmentLoader</url-pattern>
  </servlet-mapping>
</web-app>